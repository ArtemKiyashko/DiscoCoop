"""
Telegram Bot –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–π Disco Elysium (–≤–µ—Ä—Å–∏—è –¥–ª—è python-telegram-bot 13.15)
"""
import json
import time
import threading
from typing import Dict, List, Optional
from datetime import datetime, timedelta

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Updater,
    CommandHandler, 
    MessageHandler, 
    CallbackQueryHandler,
    Filters,
    CallbackContext
)
from loguru import logger

from ..utils.config import Config
from ..llm.agent import LLMAgent
from ..vision.screen_analyzer import ScreenAnalyzer
from ..game.controller import GameController


class DiscoCoopBot:
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å Telegram –±–æ—Ç–∞ –¥–ª—è Disco Coop (–≤–µ—Ä—Å–∏—è –¥–ª—è python-telegram-bot 13.15)"""
    
    def __init__(self, config: Config):
        self.config = config
        self.llm_agent = LLMAgent(config)
        self.screen_analyzer = ScreenAnalyzer(config)
        self.game_controller = GameController(config)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞
        self.chat_last_command: Dict[int, datetime] = {}
        self.chat_command_count: Dict[int, int] = {}
        self.active_sessions: Dict[int, datetime] = {}
        
        # –°–æ–∑–¥–∞–µ–º updater
        self.updater = Updater(token=config.telegram.bot_token, use_context=True)
        self.dispatcher = self.updater.dispatcher
        
        self._setup_handlers()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –æ—á–∏—Å—Ç–∫–∏ —Å–µ—Å—Å–∏–π
        self.cleanup_timer = None
        self._start_cleanup_timer()
    
    def _setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        # –ö–æ–º–∞–Ω–¥—ã
        self.dispatcher.add_handler(CommandHandler("start", self.start_command))
        self.dispatcher.add_handler(CommandHandler("help", self.help_command))
        self.dispatcher.add_handler(CommandHandler("describe", self.describe_command))
        self.dispatcher.add_handler(CommandHandler("status", self.status_command))
        self.dispatcher.add_handler(CommandHandler("stop_game", self.emergency_stop))
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–∫ –∏–≥—Ä–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
        self.dispatcher.add_handler(
            MessageHandler(Filters.text & ~Filters.command, self.handle_game_command)
        )
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–æ–≤ –æ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        self.dispatcher.add_handler(CallbackQueryHandler(self.button_callback))
    
    def _is_authorized_chat(self, chat_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–∞"""
        return chat_id in self.config.telegram.allowed_chats
    
    def _check_rate_limit(self, chat_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ –∫–æ–º–∞–Ω–¥"""
        now = datetime.now()
        
        # –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        if chat_id not in self.chat_last_command or \
           (now - self.chat_last_command[chat_id]).total_seconds() > 60:
            self.chat_command_count[chat_id] = 0
            self.chat_last_command[chat_id] = now
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞
        if self.chat_command_count[chat_id] >= self.config.security.rate_limit:
            return False
        
        self.chat_command_count[chat_id] += 1
        return True

    def start_command(self, update: Update, context: CallbackContext):
        """–ö–æ–º–∞–Ω–¥–∞ /start"""
        chat_id = update.effective_chat.id
        
        if not self._is_authorized_chat(chat_id):
            update.message.reply_text(
                "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –≠—Ç–æ—Ç —á–∞—Ç –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞."
            )
            return
        
        welcome_text = """
üéÆ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Disco Coop!**

–Ø –±–æ—Ç –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –∏–≥—Ä—ã –≤ Disco Elysium. –í—ã –º–æ–∂–µ—Ç–µ:

‚Ä¢ –ü–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –æ–±—ã—á–Ω—ã–º —è–∑—ã–∫–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–ø–æ–¥–æ–π—Ç–∏ –∫ –¥–≤–µ—Ä–∏", "–ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –±–∞—Ä–º–µ–Ω–æ–º")
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `/describe` —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω–µ
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `/help` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏

‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ:** –ò–≥—Ä–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω–∞ –∏ –∞–∫—Ç–∏–≤–Ω–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.
        """
        
        keyboard = [
            [InlineKeyboardButton("üìñ –û–ø–∏—Å–∞—Ç—å —ç–∫—Ä–∞–Ω", callback_data="describe")],
            [InlineKeyboardButton("üìä –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã", callback_data="status")],
            [InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        update.message.reply_text(
            welcome_text, 
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Å—Å–∏—é
        self.active_sessions[chat_id] = datetime.now()
        logger.info(f"–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è –∑–∞–ø—É—â–µ–Ω–∞ –¥–ª—è —á–∞—Ç–∞ {chat_id}")

    def help_command(self, update: Update, context: CallbackContext):
        """–ö–æ–º–∞–Ω–¥–∞ /help"""
        chat_id = update.effective_chat.id
        
        if not self._is_authorized_chat(chat_id):
            update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.")
            return
        
        if not self._check_rate_limit(chat_id):
            update.message.reply_text("‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–æ–º–∞–Ω–¥. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É.")
            return
        
        help_text = """
üìñ **–°–ø—Ä–∞–≤–∫–∞ –ø–æ Disco Coop Bot**

**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ `/start` - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
‚Ä¢ `/describe` - –û–ø–∏—Å–∞—Ç—å —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω–µ
‚Ä¢ `/status` - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã –∏ –±–æ—Ç–∞
‚Ä¢ `/help` - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

**–ò–≥—Ä–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
–ü–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã –æ–±—ã—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä:
‚Ä¢ "–ø–æ–¥–æ–π—Ç–∏ –∫ –¥–≤–µ—Ä–∏"
‚Ä¢ "–ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –±–∞—Ä–º–µ–Ω–æ–º" 
‚Ä¢ "–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–Ω–∞—Ç—É"
‚Ä¢ "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç"

**–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º –∫–æ–º–∞–Ω–¥ –≤ –º–∏–Ω—É—Ç—É: 10
‚Ä¢ –°–µ—Å—Å–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è

‚ö° **–°–æ–≤–µ—Ç:** –ß–µ–º –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –≤—ã –æ–ø–∏—à–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, —Ç–µ–º –ª—É—á—à–µ –±—É–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç!
        """
        
        update.message.reply_text(help_text, parse_mode='Markdown')

    def describe_command(self, update: Update, context: CallbackContext):
        """–ö–æ–º–∞–Ω–¥–∞ /describe - –æ–ø–∏—Å–∞–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞"""
        chat_id = update.effective_chat.id
        
        if not self._is_authorized_chat(chat_id):
            update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.")
            return
        
        if not self._check_rate_limit(chat_id):
            update.message.reply_text("‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–æ–º–∞–Ω–¥. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É.")
            return
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º
            update.message.reply_text("üì∏ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —ç–∫—Ä–∞–Ω...")
            
            screenshot_path = self.screen_analyzer.capture_screenshot()
            description = self.screen_analyzer.analyze_screenshot(screenshot_path)
            
            update.message.reply_text(f"üìñ **–û–ø–∏—Å–∞–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞:**\n\n{description}", parse_mode='Markdown')
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —ç–∫—Ä–∞–Ω–∞: {e}")
            update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —ç–∫—Ä–∞–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞.")

    def status_command(self, update: Update, context: CallbackContext):
        """–ö–æ–º–∞–Ω–¥–∞ /status - —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"""
        chat_id = update.effective_chat.id
        
        if not self._is_authorized_chat(chat_id):
            update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.")
            return
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã
            llm_status = "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" if self.llm_agent.is_available() else "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
            vision_status = "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" if self.screen_analyzer.is_available() else "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
            controller_status = "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" if self.game_controller.is_available() else "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏
            session_start = self.active_sessions.get(chat_id)
            session_duration = "–ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
            if session_start:
                duration = datetime.now() - session_start
                session_duration = f"{duration.seconds // 60} –º–∏–Ω"
            
            commands_used = self.chat_command_count.get(chat_id, 0)
            
            status_text = f"""
üìä **–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã Disco Coop**

**–ö–æ–º–ø–ænen—Ç—ã:**
‚Ä¢ LLM –∞–≥–µ–Ω—Ç: {llm_status}
‚Ä¢ –ê–Ω–∞–ª–∏–∑ —ç–∫—Ä–∞–Ω–∞: {vision_status}  
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–π: {controller_status}

**–°–µ—Å—Å–∏—è:**
‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {session_duration}
‚Ä¢ –ö–æ–º–∞–Ω–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {commands_used}/10 –≤ –º–∏–Ω—É—Ç—É

**–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:**
‚Ä¢ –ú–æ–¥–µ–ª—å LLM: {self.config.llm.model_name}
‚Ä¢ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞: {self.config.vision.screenshot_resolution}
            """
            
            update.message.reply_text(status_text, parse_mode='Markdown')
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")
            update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã.")

    def handle_game_command(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–≥—Ä–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥"""
        chat_id = update.effective_chat.id
        user_command = update.message.text
        
        if not self._is_authorized_chat(chat_id):
            update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.")
            return
        
        if not self._check_rate_limit(chat_id):
            update.message.reply_text("‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–æ–º–∞–Ω–¥. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É.")
            return
        
        try:
            # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏
            self.active_sessions[chat_id] = datetime.now()
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É
            update.message.reply_text("üéÆ –í—ã–ø–æ–ª–Ω—è—é –∫–æ–º–∞–Ω–¥—É...")
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞
            screenshot_path = self.screen_analyzer.capture_screenshot()
            screen_context = self.screen_analyzer.analyze_screenshot(screenshot_path)
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π –æ—Ç LLM
            action_plan = self.llm_agent.process_command(user_command, screen_context)
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è
            result = self.game_controller.execute_actions(action_plan)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            response = f"‚úÖ **–í—ã–ø–æ–ª–Ω–µ–Ω–æ:** {user_command}\n\nüìã **–†–µ–∑—É–ª—å—Ç–∞—Ç:** {result}"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
            keyboard = [
                [InlineKeyboardButton("üìñ –û–ø–∏—Å–∞—Ç—å —ç–∫—Ä–∞–Ω", callback_data="describe")],
                [InlineKeyboardButton("üìä –°—Ç–∞—Ç—É—Å", callback_data="status")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            update.message.reply_text(
                response, 
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∏–≥—Ä–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã: {e}")
            update.message.reply_text(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}\n\n"
                "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞ –∏ –∞–∫—Ç–∏–≤–Ω–∞."
            )

    def button_callback(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π inline –∫–Ω–æ–ø–æ–∫"""
        query = update.callback_query
        chat_id = query.message.chat_id
        
        if not self._is_authorized_chat(chat_id):
            query.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.")
            return
        
        query.answer()  # –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É
        if query.data == "describe":
            self.describe_command(update, context)
        elif query.data == "status":
            self.status_command(update, context)
        elif query.data == "help":
            self.help_command(update, context)

    def emergency_stop(self, update: Update, context: CallbackContext):
        """–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–≥—Ä—ã"""
        chat_id = update.effective_chat.id
        
        if not self._is_authorized_chat(chat_id):
            update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.")
            return
        
        try:
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è
            self.game_controller.emergency_stop()
            
            # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é
            if chat_id in self.active_sessions:
                del self.active_sessions[chat_id]
            
            update.message.reply_text("üõë **–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!**\n\n–í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–µ—Ä–≤–∞–Ω—ã.")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–µ: {e}")
            update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–µ.")

    def _cleanup_sessions(self):
        """–û—á–∏—Å—Ç–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π"""
        try:
            now = datetime.now()
            inactive_sessions = []
            
            for chat_id, last_activity in self.active_sessions.items():
                if (now - last_activity).total_seconds() > 1800:  # 30 –º–∏–Ω—É—Ç
                    inactive_sessions.append(chat_id)
            
            for chat_id in inactive_sessions:
                del self.active_sessions[chat_id]
                logger.info(f"–°–µ—Å—Å–∏—è {chat_id} –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ —Ç–∞–π–º–∞—É—Ç—É")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–µ—Å—Å–∏–π: {e}")

    def _start_cleanup_timer(self):
        """–ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –æ—á–∏—Å—Ç–∫–∏ —Å–µ—Å—Å–∏–π"""
        self._cleanup_sessions()
        self.cleanup_timer = threading.Timer(300.0, self._start_cleanup_timer)  # –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        self.cleanup_timer.daemon = True
        self.cleanup_timer.start()

    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        try:
            logger.info("üöÄ –ó–∞–ø—É—Å–∫ Disco Coop Bot...")
            logger.info(f"üì° –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —á–∞—Ç—ã: {self.config.telegram.allowed_chats}")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º polling
            self.updater.start_polling()
            logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            
            # –ñ–¥–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
            self.updater.idle()
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
            raise
        finally:
            if self.cleanup_timer:
                self.cleanup_timer.cancel()
            logger.info("üõë Disco Coop Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
        if self.cleanup_timer:
            self.cleanup_timer.cancel()
        self.updater.stop()