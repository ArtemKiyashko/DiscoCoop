#!/usr/bin/env python3
"""–¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""

import sys
import os

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã"""
    try:
        import telegram
        print(f"‚úÖ python-telegram-bot: {telegram.__version__}")
    except ImportError as e:
        print(f"‚ùå python-telegram-bot: {e}")
        return False
    
    try:
        import aiohttp
        print("‚úÖ aiohttp: OK")
    except ImportError as e:
        print(f"‚ùå aiohttp: {e}")
        return False
        
    try:
        from PIL import Image
        print("‚úÖ Pillow: OK")
    except ImportError as e:
        print(f"‚ùå Pillow: {e}")
        return False
        
    return True

def test_ollama():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º Ollama"""
    ollama_path = os.path.expanduser("~/.local/share/ollama/bin/ollama")
    if os.path.exists(ollama_path):
        print(f"‚úÖ Ollama –Ω–∞–π–¥–µ–Ω: {ollama_path}")
        return True
    else:
        print(f"‚ùå Ollama –Ω–µ –Ω–∞–π–¥–µ–Ω: {ollama_path}")
        return False

def test_tools():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"""
    tools_ok = True
    
    for tool in ["xwd", "convert", "import"]:
        tool_path = os.path.expanduser(f"~/.local/bin/{tool}")
        if os.path.exists(tool_path):
            print(f"‚úÖ {tool}: {tool_path}")
        else:
            print(f"‚ùå {tool}: –Ω–µ –Ω–∞–π–¥–µ–Ω")
            tools_ok = False
            
    return tools_ok

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
    print("\nüì¶ Python –ø–∞–∫–µ—Ç—ã:")
    imports_ok = test_imports()
    
    print("\nü§ñ Ollama:")
    ollama_ok = test_ollama()
    
    print("\nüõ†Ô∏è  –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:")
    tools_ok = test_tools()
    
    print("\n" + "="*50)
    if imports_ok and ollama_ok and tools_ok:
        print("üéâ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã!")
        sys.exit(0)
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è")
        sys.exit(1)