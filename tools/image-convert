#!/usr/bin/env python3
"""
Простой конвертер изображений на Python
Заменяет ImageMagick convert для базовых операций
"""

import sys
import os
from PIL import Image

def convert_image(input_file, output_file, format_hint=None):
    """Конвертирует изображение из одного формата в другой"""
    try:
        with Image.open(input_file) as img:
            # Определяем формат по расширению выходного файла
            if format_hint:
                output_format = format_hint.upper()
            else:
                ext = os.path.splitext(output_file)[1].lower()
                format_map = {
                    '.jpg': 'JPEG', '.jpeg': 'JPEG',
                    '.png': 'PNG', '.gif': 'GIF',
                    '.bmp': 'BMP', '.tiff': 'TIFF'
                }
                output_format = format_map.get(ext, 'PNG')
            
            # Сохраняем в нужном формате
            if output_format == 'JPEG' and img.mode in ('RGBA', 'LA', 'P'):
                # JPEG не поддерживает прозрачность
                background = Image.new('RGB', img.size, (255, 255, 255))
                background.paste(img, mask=img.split()[-1] if img.mode in ('RGBA', 'LA') else None)
                img = background
            
            img.save(output_file, format=output_format)
            print(f"✅ Конвертировано: {input_file} -> {output_file}")
            return True
            
    except Exception as e:
        print(f"❌ Ошибка конвертации: {e}", file=sys.stderr)
        return False

def main():
    if len(sys.argv) < 3:
        print("Usage: image-convert <input_file> <output_file> [format]")
        sys.exit(1)
    
    input_file = sys.argv[1]
    output_file = sys.argv[2]
    format_hint = sys.argv[3] if len(sys.argv) > 3 else None
    
    if not os.path.exists(input_file):
        print(f"❌ Файл не найден: {input_file}", file=sys.stderr)
        sys.exit(1)
    
    success = convert_image(input_file, output_file, format_hint)
    sys.exit(0 if success else 1)

if __name__ == "__main__":
    main()