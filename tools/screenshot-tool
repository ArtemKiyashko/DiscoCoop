#!/bin/bash
# Инструмент скриншотов для Steam Deck / Linux

OUTPUT_FILE="${1:-screenshot.png}"
WINDOW_TITLE="${2:-Disco Elysium}"

# Функция для поиска окна игры
find_game_window() {
    if ! command -v xdotool &> /dev/null; then
        return 1
    fi
    
    # Ищем окно по точному названию
    WINDOW_ID=$(xdotool search --name "$WINDOW_TITLE" 2>/dev/null | head -1)
    if [ -n "$WINDOW_ID" ]; then
        echo "$WINDOW_ID"
        return 0
    fi
    
    # Попробуем поиск по части названия  
    WINDOW_ID=$(xdotool search --name "Disco" 2>/dev/null | head -1)
    if [ -n "$WINDOW_ID" ]; then
        echo "$WINDOW_ID"
        return 0
    fi
    
    return 1
}

# Определяем информацию о дисплеях
detect_displays() {
    if command -v xrandr &> /dev/null; then
        echo "🖥️  Обнаруженные дисплеи:"
        xrandr --listmonitors | tail -n +2 | while read -r line; do
            if [ -n "$line" ]; then
                display_name=$(echo "$line" | awk '{print $NF}')
                geometry=$(echo "$line" | awk '{print $3}')
                echo "  - $display_name: $geometry"
            fi
        done
    fi
}

# Steam Deck Desktop Mode - используем Spectacle
if command -v spectacle &> /dev/null; then
    # Показываем информацию о дисплеях для отладки
    detect_displays
    
    # Сначала ищем окно игры
    WINDOW_ID=$(find_game_window)
    
    if [ -n "$WINDOW_ID" ]; then
        echo "🎮 Скриншот окна игры (ID: $WINDOW_ID)"
        
        # Получаем геометрию окна для отладки
        if command -v xdotool &> /dev/null; then
            WINDOW_GEOMETRY=$(xdotool getwindowgeometry "$WINDOW_ID" 2>/dev/null || echo "Geometry: unknown")
            echo "📐 $WINDOW_GEOMETRY"
        fi
        
        # Активируем окно и делаем скриншот
        xdotool windowactivate "$WINDOW_ID" 2>/dev/null || true
        sleep 0.2
        # Используем activewindow (-a) 
        spectacle -a -n -b -o "$OUTPUT_FILE"
    else
        echo "🖥️  Скриншот всего экрана (окно игры не найдено)"
        spectacle -f -n -b -o "$OUTPUT_FILE"
    fi
    exit $?
fi

# Fallback для других инструментов
if command -v scrot &> /dev/null; then
    scrot "$OUTPUT_FILE"
    exit $?
fi

if command -v grim &> /dev/null; then
    grim "$OUTPUT_FILE"  
    exit $?
fi

echo "❌ Не найден инструмент для скриншотов" >&2
echo "💡 Установите: sudo pacman -S spectacle" >&2
exit 1