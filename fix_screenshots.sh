#!/bin/bash

# –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏ –Ω–∞ Steam Deck
# –í–∫–ª—é—á–∞–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ keyring –∏ —É—Å—Ç–∞–Ω–æ–≤–∫—É –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤

# –£–±–∏—Ä–∞–µ–º set -e, —á—Ç–æ–±—ã —Å–∫—Ä–∏–ø—Ç –Ω–µ –ø–∞–¥–∞–ª –Ω–∞ –ø–µ—Ä–≤–æ–π –æ—à–∏–±–∫–µ
# set -e

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å timestamp
log() {
    echo "[$(date '+%H:%M:%S')] $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
safe_run() {
    local cmd="$1"
    local description="$2"
    
    log "–í—ã–ø–æ–ª–Ω—è–µ–º: $description"
    if eval "$cmd"; then
        log "‚úÖ –£—Å–ø–µ—à–Ω–æ: $description"
        return 0
    else
        local exit_code=$?
        log "‚ùå –û—à–∏–±–∫–∞ ($exit_code): $description"
        return $exit_code
    fi
}

echo "üñºÔ∏è  –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤"
echo "======================================"
echo "üïê $(date '+%Y-%m-%d %H:%M:%S')"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ Steam Deck
if [ -f "/etc/steamos-release" ] && [ "$XDG_CURRENT_DESKTOP" != "KDE" ]; then
    echo "‚ö†Ô∏è  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –≤ Desktop Mode –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞"
    exit 1
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
echo "üîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:"
echo "   Desktop: ${XDG_CURRENT_DESKTOP:-–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω}"
echo "   User: $(whoami)"
echo "   PWD: $(pwd)"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–∞–Ω–¥
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–∞–Ω–¥..."

MISSING_COMMANDS=""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º convert (ImageMagick)
if ! command -v convert &> /dev/null; then
    echo "‚ùå convert (ImageMagick) –Ω–µ –Ω–∞–π–¥–µ–Ω"
    MISSING_COMMANDS="$MISSING_COMMANDS imagemagick"
else
    echo "‚úÖ convert (ImageMagick) –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º xwd
if ! command -v xwd &> /dev/null; then
    echo "‚ùå xwd –Ω–µ –Ω–∞–π–¥–µ–Ω"  
    MISSING_COMMANDS="$MISSING_COMMANDS xorg-xwd"
else
    echo "‚úÖ xwd –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º xdotool (–ø–æ–ª–µ–∑–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–∫–Ω–∞–º–∏)
if ! command -v xdotool &> /dev/null; then
    echo "‚ùå xdotool –Ω–µ –Ω–∞–π–¥–µ–Ω"
    MISSING_COMMANDS="$MISSING_COMMANDS xdotool"
else
    echo "‚úÖ xdotool –Ω–∞–π–¥–µ–Ω"
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è keyring
fix_keyring() {
    echo ""
    echo "üîß ==============================="
    echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ keyring pacman"
    echo "üîß ==============================="
    echo ""
    
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sudo systemctl stop pacman-init.service 2>/dev/null || true
    
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω–æ–≥–æ keyring..."
    sudo rm -rf /etc/pacman.d/gnupg
    sudo rm -rf /var/lib/pacman/sync/*
    
    # –¢–∞–∫–∂–µ –æ—á–∏—â–∞–µ–º –∫—ç—à –ø–∞–∫–µ—Ç–æ–≤
    sudo rm -rf /var/cache/pacman/pkg/*
    
    echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
    sudo mkdir -p /etc/pacman.d/gnupg
    sudo chown -R root:root /etc/pacman.d/gnupg/
    sudo chmod -R 755 /etc/pacman.d/gnupg/
    
    echo "üîë –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ keyring..."
    if ! sudo pacman-key --init; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å keyring"
        return 1
    fi
    
    echo "üì¶ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–ª—é—á–∞–º–∏ Arch Linux..."
    if ! sudo pacman-key --populate archlinux; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–æ–ª–Ω–∏—Ç—å keyring –∫–ª—é—á–∞–º–∏ Arch Linux"
        return 1
    fi
    
    echo "üîê –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–π SteamOS..."
    # –ü—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∫–ª—é—á–µ–π
    KEY_SERVERS=(
        "hkps://keys.openpgp.org"
        "hkps://keyserver.ubuntu.com"
        "hkps://pgp.mit.edu"
    )
    
    STEAMOS_KEY="3056513887B78AEB"
    
    for server in "${KEY_SERVERS[@]}"; do
        echo "   –ü—Ä–æ–±—É–µ–º —Å–µ—Ä–≤–µ—Ä: $server"
        if sudo pacman-key --keyserver "$server" --recv-keys "$STEAMOS_KEY" 2>/dev/null; then
            echo "   ‚úÖ –ö–ª—é—á –ø–æ–ª—É—á–µ–Ω —Å $server"
            sudo pacman-key --lsign-key "$STEAMOS_KEY"
            break
        else
            echo "   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á —Å $server"
        fi
    done
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª—é—á–∏ –¥–ª—è Steam Deck
    echo "üîê –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–ª—é—á–µ–π..."
    ADDITIONAL_KEYS=(
        "991F6E3F0765CF6295888586139B09DA5BF0D338"  # SteamOS signing key
        "AB19265E5D7D20687D303246BA1DFB64FFF979E7"  # SteamOS package signing
    )
    
    for key in "${ADDITIONAL_KEYS[@]}"; do
        for server in "${KEY_SERVERS[@]}"; do
            if sudo pacman-key --keyserver "$server" --recv-keys "$key" 2>/dev/null; then
                sudo pacman-key --lsign-key "$key" 2>/dev/null || true
                echo "   ‚úÖ –ö–ª—é—á $key –¥–æ–±–∞–≤–ª–µ–Ω"
                break
            fi
        done
    done
    
    echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–≤–µ—Ä–∏—è –∫ –∫–ª—é—á–∞–º..."
    sudo pacman-key --updatedb
    
    echo ""
    echo "‚úÖ ==============================="
    echo "‚úÖ Keyring —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!"
    echo "‚úÖ ==============================="
    echo ""
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞–∫–µ—Ç—ã
if [ ! -z "$MISSING_COMMANDS" ]; then
    echo ""
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–∞–∫–µ—Ç–æ–≤: $MISSING_COMMANDS"
    
    # –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
    echo "üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã Steam Deck..."
    sudo steamos-readonly disable 2>/dev/null || true
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º keyring –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    echo "üì• –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –ø–∞–∫–µ—Ç–æ–≤..."
    if ! sudo pacman -Sy --noconfirm 2>/dev/null; then
        echo "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤, –≤–æ–∑–º–æ–∂–Ω–æ keyring –ø–æ–≤—Ä–µ–∂–¥–µ–Ω"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ keyring
        if sudo pacman -Sy 2>&1 | grep -i "keyring\|key\|signature"; then
            echo "üîê –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å keyring, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º..."
            fix_keyring
            
            # –ü—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è keyring
            echo "üì• –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
            sudo pacman -Sy --noconfirm
        else
            echo "‚ö†Ô∏è  –î—Ä—É–≥–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å pacman, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
        fi
    else
        echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ"
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
    
    # –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    log "–ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $MISSING_COMMANDS"
    log "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..."
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–± –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
    {
        timeout 300 bash -c "yes 'y' | sudo pacman -S --needed $MISSING_COMMANDS"
        INSTALL_EXIT_CODE=$?
    } > >(tee /tmp/install_output.log) 2>&1 || INSTALL_EXIT_CODE=$?
    
    INSTALL_OUTPUT=$(cat /tmp/install_output.log 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ª–æ–≥")
    
    log "–ö–æ–¥ –≤—ã—Ö–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $INSTALL_EXIT_CODE"
    
    if [ $INSTALL_EXIT_CODE -eq 0 ]; then
        echo "‚úÖ –ü–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
    elif [ $INSTALL_EXIT_CODE -eq 124 ]; then
        echo "‚è±Ô∏è  –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ (timeout), –≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª–∏—Ç—Å—è —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ"
        echo "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É –≤—Ä—É—á–Ω—É—é:"
        echo "   sudo steamos-readonly disable"
        echo "   sudo pacman -S --needed $MISSING_COMMANDS"
        echo "   sudo steamos-readonly enable"
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç—ã (–∫–æ–¥ –æ—à–∏–±–∫–∏: $INSTALL_EXIT_CODE)"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–≤—è–∑–∞–Ω–∞ –ª–∏ –æ—à–∏–±–∫–∞ —Å keyring
        if echo "$INSTALL_OUTPUT" | grep -i "keyring\|key.*missing\|signature"; then
            echo "üîê –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å keyring –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º..."
            fix_keyring
            
            # –ü—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç—ã –µ—â–µ —Ä–∞–∑ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è keyring
            echo "üì¶ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤..."
            
            RETRY_OUTPUT=$(timeout 300 bash -c "yes 'y' | sudo pacman -S --needed $MISSING_COMMANDS" 2>&1 || true)
            RETRY_EXIT_CODE=$?
            
            if [ $RETRY_EXIT_CODE -eq 0 ]; then
                echo "‚úÖ –ü–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è keyring"
            elif [ $RETRY_EXIT_CODE -eq 124 ]; then
                echo "‚è±Ô∏è  –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ"
                echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å—Å—è –≤ —Ñ–æ–Ω–µ, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–∑–∂–µ"
            else
                echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç—ã –¥–∞–∂–µ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è keyring"
                echo "üìÑ –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏:"
                echo "$RETRY_OUTPUT" | tail -10  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –æ—à–∏–±–∫–∏
                echo ""
                echo "üõ†Ô∏è  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:"
                echo "1. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ Steam Deck –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
                echo "2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Flatpak –≤–µ—Ä—Å–∏—é ImageMagick:"
                echo "   flatpak install --user flathub org.imagemagick.ImageMagick"
            fi
        else
            echo ""
            echo "üõ†Ô∏è  –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:"
            echo "1. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –≤—Ä—É—á–Ω—É—é:"
            echo "   sudo steamos-readonly disable"
            echo "   sudo pacman -Sy"
            echo "   sudo pacman -S imagemagick xorg-xwd xdotool"
            echo "   sudo steamos-readonly enable"
            echo ""
            echo "2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Flatpak –≤–µ—Ä—Å–∏—é ImageMagick:"
            echo "   flatpak install --user flathub org.imagemagick.ImageMagick"
            echo ""
            echo "3. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:"
            echo "   sudo passwd deck  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è deck"
        fi
    fi
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –≤ read-only —Ä–µ–∂–∏–º
    echo "üîí –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –≤ read-only —Ä–µ–∂–∏–º..."
    sudo steamos-readonly enable 2>/dev/null || true
    
else
    echo "‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞–π–¥–µ–Ω—ã"
fi

# –ï—Å–ª–∏ pacman –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
if [ -n "$MISSING_COMMANDS" ]; then
    echo ""
    echo "üîÑ –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏..."
    
    # –ú–µ—Ç–æ–¥ 1: Flatpak
    if command -v flatpak &> /dev/null; then
        echo "üì¶ –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ Flatpak..."
        
        if echo "$MISSING_COMMANDS" | grep -q "convert\|imagemagick"; then
            echo "  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ ImageMagick —á–µ—Ä–µ–∑ Flatpak..."
            if flatpak install --user -y flathub org.imagemagick.ImageMagick 2>/dev/null; then
                echo "‚úÖ ImageMagick —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ Flatpak"
                # –°–æ–∑–¥–∞–µ–º wrapper
                mkdir -p "$HOME/.local/bin"
                cat > "$HOME/.local/bin/convert" << 'EOF'
#!/bin/bash
exec flatpak run org.imagemagick.ImageMagick convert "$@"
EOF
                chmod +x "$HOME/.local/bin/convert"
                export PATH="$HOME/.local/bin:$PATH"
            else
                echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ Flatpak"
            fi
        fi
    fi
    
    # –ú–µ—Ç–æ–¥ 2: –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –±–∏–Ω–∞—Ä–Ω–∏–∫–∏
    echo "üì• –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –±–∏–Ω–∞—Ä–Ω–∏–∫–æ–≤..."
    mkdir -p "$HOME/.local/bin"
    
    # ImageMagick
    if echo "$MISSING_COMMANDS" | grep -q "convert\|imagemagick" && ! command -v convert &> /dev/null; then
        echo "  –ó–∞–≥—Ä—É–∑–∫–∞ ImageMagick..."
        if curl -L "https://github.com/SoftCreatR/imei/releases/latest/download/imei-linux-x86_64" -o /tmp/convert 2>/dev/null; then
            chmod +x /tmp/convert
            mv /tmp/convert "$HOME/.local/bin/convert"
            echo "‚úÖ ImageMagick —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        else
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å ImageMagick"
        fi
    fi
    
    # xwd wrapper
    if echo "$MISSING_COMMANDS" | grep -q "xwd" && ! command -v xwd &> /dev/null; then
        echo "  –°–æ–∑–¥–∞–Ω–∏–µ wrapper –¥–ª—è xwd..."
        cat > "$HOME/.local/bin/xwd" << 'EOF'
#!/bin/bash
# Wrapper –¥–ª—è xwd
if command -v import &> /dev/null; then
    import "$@"
elif command -v gnome-screenshot &> /dev/null; then
    gnome-screenshot -f "${@: -1}"
else
    echo "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤" >&2
    exit 1
fi
EOF
        chmod +x "$HOME/.local/bin/xwd"
        echo "‚úÖ Wrapper –¥–ª—è xwd —Å–æ–∑–¥–∞–Ω"
    fi
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH
    export PATH="$HOME/.local/bin:$PATH"
    echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/.bashrc 2>/dev/null || true
    
    # –ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã
    MISSING_COMMANDS=""
    for cmd in convert xwd xdotool import; do
        if ! command -v "$cmd" &> /dev/null; then
            MISSING_COMMANDS="$MISSING_COMMANDS $cmd"
        fi
    done
    
    if [ -n "$MISSING_COMMANDS" ]; then
        echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:$MISSING_COMMANDS"
        echo "üí° –ù–æ —Å–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é"
    else
        echo "‚úÖ –í—Å–µ –∫–æ–º–∞–Ω–¥—ã —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã!"
    fi
fi

echo ""
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º X11 —Å–µ—Å—Å–∏—é
if [ -z "$DISPLAY" ]; then
    echo "‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è DISPLAY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    echo "üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –≤ Desktop Mode —Å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π —Å–µ—Å—Å–∏–µ–π"
    exit 1
else
    echo "‚úÖ DISPLAY —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $DISPLAY"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å X —Å–µ—Ä–≤–µ—Ä–∞
if ! xdpyinfo &>/dev/null; then
    echo "‚ùå X —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –≤ Desktop Mode"
    exit 1
else
    echo "‚úÖ X —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
echo "üì∏ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞..."
TEMP_FILE="/tmp/screenshot_test_$(date +%s).png"

# –ü—Ä–æ–±—É–µ–º –º–µ—Ç–æ–¥ —Å xwd + convert
if command -v xwd &>/dev/null && command -v convert &>/dev/null; then
    echo "üîÑ –ü—Ä–æ–±—É–µ–º –º–µ—Ç–æ–¥ xwd + convert..."
    if timeout 10 bash -c "xwd -root | convert xwd:- '$TEMP_FILE'" 2>/dev/null; then
        if [ -f "$TEMP_FILE" ] && [ -s "$TEMP_FILE" ]; then
            echo "‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ: $TEMP_FILE"
            echo "üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $(du -h "$TEMP_FILE" | cut -f1)"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            if command -v file &>/dev/null; then
                FILE_TYPE=$(file "$TEMP_FILE")
                echo "üìã –¢–∏–ø —Ñ–∞–π–ª–∞: $FILE_TYPE"
            fi
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
            rm -f "$TEMP_FILE"
        else
            echo "‚ùå –§–∞–π–ª —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω"
        fi
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –º–µ—Ç–æ–¥–æ–º xwd + convert"
    fi
else
    echo "‚ùå –ö–æ–º–∞–Ω–¥—ã xwd –∏–ª–∏ convert –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤..."

# gnome-screenshot
if command -v gnome-screenshot &>/dev/null; then
    echo "‚úÖ gnome-screenshot –¥–æ—Å—Ç—É–ø–µ–Ω"
elif command -v spectacle &>/dev/null; then
    echo "‚úÖ spectacle (KDE) –¥–æ—Å—Ç—É–ø–µ–Ω"
elif command -v scrot &>/dev/null; then
    echo "‚úÖ scrot –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ö†Ô∏è  –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –ø–∞–∫–µ—Ç—ã –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
echo ""
echo "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤..."

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
if [ -f "$HOME/disco_coop/venv/bin/activate" ]; then
    source "$HOME/disco_coop/venv/bin/activate"
    echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–∫–µ—Ç—ã
python3 -c "
import sys
try:
    from PIL import ImageGrab
    print('‚úÖ PIL.ImageGrab –¥–æ—Å—Ç—É–ø–µ–Ω')
except ImportError:
    print('‚ùå PIL.ImageGrab –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')

try:
    import pyautogui
    print('‚úÖ pyautogui –¥–æ—Å—Ç—É–ø–µ–Ω')
except ImportError:
    print('‚ùå pyautogui –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')

try:
    import pyscreenshot
    print('‚úÖ pyscreenshot –¥–æ—Å—Ç—É–ø–µ–Ω')  
except ImportError:
    print('‚ö†Ô∏è  pyscreenshot –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å)')
" 2>/dev/null

echo ""
echo "üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo "ÔøΩ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥..."
FINAL_MISSING=""

if ! command -v convert &> /dev/null; then
    echo "‚ùå convert –≤—Å—ë –µ—â—ë –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    FINAL_MISSING="$FINAL_MISSING convert"
else
    echo "‚úÖ convert –Ω–∞–π–¥–µ–Ω"
fi

if ! command -v xwd &> /dev/null; then
    echo "‚ùå xwd –≤—Å—ë –µ—â—ë –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    FINAL_MISSING="$FINAL_MISSING xwd"
else
    echo "‚úÖ xwd –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:"
echo "=============="

if [ -z "$FINAL_MISSING" ]; then
    echo "üéâ –í–°–ï –ö–û–ú–ê–ù–î–´ –£–°–¢–ê–ù–û–í–õ–ï–ù–´ –£–°–ü–ï–®–ù–û!"
    echo "‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç—ã –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å"
    echo ""
    echo "üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ:"
    echo "   1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞: ./start.sh"
    echo "   2. –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /describe –≤ Telegram"
    echo "   3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ Disco Elysium –∑–∞–ø—É—â–µ–Ω"
else
    echo "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤—Å—ë –µ—â—ë –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç:$FINAL_MISSING"
    echo ""
    echo "üí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:"
    echo "   1. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ Steam Deck"
    echo "   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ"
    echo "   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä—É—á–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É"
fi

echo ""
echo "üõ†Ô∏è  –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏:"
echo "   echo \$DISPLAY                    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å DISPLAY"
echo "   xdpyinfo | head                  # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ X —Å–µ—Ä–≤–µ—Ä–µ"
echo "   xwd -root | convert xwd:- test.png # –¢–µ—Å—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–∞"
echo "   python3 -c \"from PIL import ImageGrab; ImageGrab.grab().save('test.png')\" # –¢–µ—Å—Ç Python"