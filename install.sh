#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Disco Coop –Ω–∞ Steam Deck

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
REPOSITORY_URL="https://github.com/ArtemKiyashko/DiscoCoop.git"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
PACMAN_FAILED=false

echo "üéÆ Disco Coop - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ Steam Deck"
echo "========================================"
echo "üìÖ –í–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞: $(date '+%Y-%m-%d %H:%M:%S')"
echo "üîó –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPOSITORY_URL"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ Desktop Mode (—Ç–æ–ª—å–∫–æ –¥–ª—è Steam Deck)
if [ -f "/etc/steamos-release" ] && [ "$XDG_CURRENT_DESKTOP" != "KDE" ]; then
    echo "‚ö†Ô∏è  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –≤ Desktop Mode –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
PROJECT_DIR="$HOME/disco_coop"
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –≤ $PROJECT_DIR"

if [ -d "$PROJECT_DIR" ]; then
    echo "‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û–±–Ω–æ–≤–ª—è–µ–º..."
    cd "$PROJECT_DIR"
    git pull
else
    echo "üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    cd "$HOME"
    git clone "$REPOSITORY_URL" disco_coop
    cd disco_coop
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ pacman
if command -v pacman &> /dev/null; then
    echo "üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã Steam Deck..."
    sudo steamos-readonly disable 2>/dev/null || true
    
    echo "üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ keyring –¥–ª—è SteamOS..."
    sudo pacman-key --init 2>/dev/null || true
    sudo pacman-key --populate archlinux 2>/dev/null || true
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á–∏ SteamOS
    echo "ÔøΩ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–π SteamOS..."
    sudo pacman-key --recv-keys 3056513887B78AEB 2>/dev/null || true
    sudo pacman-key --lsign-key 3056513887B78AEB 2>/dev/null || true
    
    echo "ÔøΩüì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    sudo pacman -Sy --noconfirm
    
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
    
    # –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω–æ–≥–æ –∫—ç—à–∞ –ø–∞–∫–µ—Ç–æ–≤..."
    sudo find /var/cache/pacman/pkg/ -name "*.pkg.tar.zst" -type f -delete 2>/dev/null || true
    
    # –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    printf "y\ny\n" | sudo pacman -Scc 2>/dev/null || true
    
    # –ü—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏
    echo "üì• –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Python –∏ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º timeout –∏ yes –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤
    if timeout 300 bash -c 'yes "y" | sudo pacman -S --needed python python-pip git 2>/dev/null'; then
        echo "‚úÖ –ë–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        
        # –ü—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
        echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
        timeout 180 bash -c 'yes "y" | sudo pacman -S --needed tk xdotool imagemagick 2>/dev/null' || {
            echo "‚ö†Ô∏è  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã, –Ω–æ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ"
        }
    else
        echo "‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ pacman, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥..."
        PACMAN_FAILED=true
    fi
    
    echo "üîí –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –≤ read-only —Ä–µ–∂–∏–º..."
    sudo steamos-readonly enable 2>/dev/null || true
else
    echo "‚ö†Ô∏è  pacman –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã..."
    PACMAN_FAILED=true
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Python –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —É—Å–ø–µ—Ö–∞ pacman
if [ "$PACMAN_FAILED" = true ] || ! command -v python3 &> /dev/null && ! command -v python &> /dev/null; then
    echo "ÔøΩ Python –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–Ω–æ—Å–∏–º—É—é –≤–µ—Ä—Å–∏—é..."
    cd /tmp
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–Ω–æ—Å–∏–º—É—é –≤–µ—Ä—Å–∏—é Python
    echo "üì• –ó–∞–≥—Ä—É–∑–∫–∞ Python 3.11..."
    if curl -L https://github.com/indygreg/python-build-standalone/releases/download/20231002/cpython-3.11.6+20231002-x86_64-unknown-linux-gnu-install_only.tar.gz -o python.tar.gz; then
        echo "üìÇ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ Python..."
        tar -xzf python.tar.gz -C "$HOME"
        
        # –°–æ–∑–¥–∞–µ–º —Å–∏–º–ª–∏–Ω–∫–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
        ln -sf "$HOME/python/bin/python3" "$HOME/python/bin/python" 2>/dev/null || true
        
        export PATH="$HOME/python/bin:$PATH"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ bashrc –∏ profile
        echo 'export PATH="$HOME/python/bin:$PATH"' >> ~/.bashrc
        echo 'export PATH="$HOME/python/bin:$PATH"' >> ~/.profile
        
        cd "$PROJECT_DIR"
        echo "‚úÖ Python —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ $HOME/python"
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å Python. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É."
        exit 1
    fi
fi



# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è Steam Deck)
echo "üêç –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π Python –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
if command -v python3 &> /dev/null; then
    PYTHON_CMD="python3"
elif command -v python &> /dev/null; then
    PYTHON_CMD="python"
elif [ -f "$HOME/python/bin/python3" ]; then
    PYTHON_CMD="$HOME/python/bin/python3"
    export PATH="$HOME/python/bin:$PATH"
else
    echo "‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

echo "üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º: $PYTHON_CMD"

# –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if ! $PYTHON_CMD -m venv venv; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
    exit 1
fi

source venv/bin/activate

# –û–±–Ω–æ–≤–ª—è–µ–º pip –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Å–±–æ—Ä–∫–∏
echo "üìö –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å–±–æ—Ä–∫–∏..."
python -m pip install --upgrade pip
python -m pip install --upgrade setuptools wheel build

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Å–±–æ—Ä–∫–∏ –ø–∞–∫–µ—Ç–æ–≤, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [ "$PACMAN_FAILED" = false ] && command -v pacman &> /dev/null; then
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å–±–æ—Ä–∫–∏..."
    sudo steamos-readonly disable 2>/dev/null || true
    timeout 120 bash -c 'yes "y" | sudo pacman -S --needed --noconfirm gcc python-devel libffi-devel openssl-devel' 2>/dev/null || echo "‚ö†Ô∏è  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    sudo steamos-readonly enable 2>/dev/null || true
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
install_package() {
    local package="$1"
    local backup_package="$2"
    local is_critical="$3"
    
    echo "  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ $package..."
    
    if pip install "$package" --no-cache-dir; then
        echo "  ‚úÖ $package —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 0
    elif [ ! -z "$backup_package" ]; then
        echo "  ‚ö†Ô∏è  –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –≤–µ—Ä—Å–∏—é: $backup_package"
        if pip install "$backup_package" --no-cache-dir; then
            echo "  ‚úÖ $backup_package —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            return 0
        fi
    fi
    
    if [ "$is_critical" = "true" ]; then
        echo "  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫—Ä–∏—Ç–∏—á–Ω—ã–π –ø–∞–∫–µ—Ç $package"
        return 1
    else
        echo "  ‚ö†Ô∏è  $package –ø—Ä–æ–ø—É—â–µ–Ω (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)"
        return 0
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å fallback –≤–µ—Ä—Å–∏—è–º–∏
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

install_package "python-telegram-bot>=22.0,<23.0" "python-telegram-bot>=22.0,<23.0" "true"
install_package "aiohttp==3.9.1" "aiohttp>=3.8.0" "true"
install_package "pyyaml==6.0.1" "pyyaml>=6.0" "true"
install_package "loguru==0.7.2" "loguru>=0.7.0" "true"
install_package "Pillow==10.1.0" "Pillow>=9.0.0" "true"
install_package "requests==2.31.0" "requests>=2.28.0" "true"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è pynput
install_package "six" "" "false"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (–±–æ–ª–µ–µ –º—è–≥–∫–æ)
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

# OpenCV - –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
if ! pip install opencv-python-headless --no-cache-dir; then
    if ! pip install opencv-python --no-cache-dir; then
        echo "  ‚ö†Ô∏è  OpenCV –ø—Ä–æ–ø—É—â–µ–Ω (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)"
    fi
fi

# PyAutoGUI - —á–∞—Å—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ Steam Deck
if ! pip install PyAutoGUI --no-cache-dir; then
    echo "  ‚ö†Ô∏è  PyAutoGUI –ø—Ä–æ–ø—É—â–µ–Ω (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ - –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∑–∂–µ)"
fi

# pynput - –ø—Ä–æ–±–ª–µ–º—ã —Å evdev –Ω–∞ Steam Deck, –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
echo "  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ pynput..."
if pip install pynput --no-cache-dir; then
    echo "  ‚úÖ pynput —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
elif pip install six --no-cache-dir && pip install pynput --no-deps --no-cache-dir; then
    echo "  ‚úÖ pynput —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (—Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏)"
else
    echo "  ‚ö†Ô∏è  pynput –ø—Ä–æ–ø—É—â–µ–Ω (–ø—Ä–æ–±–ª–µ–º—ã —Å evdev –Ω–∞ Steam Deck - –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)"
fi

# numpy - –æ–±—ã—á–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –±–µ–∑ –ø—Ä–æ–±–ª–µ–º
install_package "numpy" "" "false"

echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–∞–∑–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
python -c "
import sys
failed = []
try:
    import telegram
    print('‚úÖ telegram –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è')
except ImportError:
    failed.append('python-telegram-bot')
    print('‚ùå telegram –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è')

try:
    import aiohttp
    print('‚úÖ aiohttp –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è')
except ImportError:
    failed.append('aiohttp')
    print('‚ùå aiohttp –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è')

try:
    from PIL import Image
    print('‚úÖ Pillow –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è')
except ImportError:
    failed.append('Pillow')
    print('‚ùå Pillow –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è')

try:
    import yaml
    print('‚úÖ yaml –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è')
except ImportError:
    failed.append('pyyaml')
    print('‚ùå yaml –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è')

try:
    import loguru
    print('‚úÖ loguru –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è')
except ImportError:
    failed.append('loguru')
    print('‚ùå loguru –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è')

if failed:
    print(f'‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å: {failed}')
    print('üîÑ –ü—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ requirements.txt...')
    sys.exit(2)  # –°–∏–≥–Ω–∞–ª –¥–ª—è bash —Å–∫—Ä–∏–ø—Ç–∞
else:
    print('‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!')
"

# –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞, –ø—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ requirements.txt
if [ $? -eq 2 ]; then
    echo "üîÑ –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ requirements.txt..."
    if pip install -r requirements.txt --no-cache-dir; then
        echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ requirements.txt"
    else
        echo "‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º—ã —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø–∞–∫–µ—Ç–æ–≤, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Ollama
echo "ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama..."

OLLAMA_INSTALLED=false
OLLAMA_WORKING=false

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ ollama –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
if command -v ollama &> /dev/null; then
    OLLAMA_INSTALLED=true
    echo "‚úÖ Ollama –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ"
elif [ -f "$HOME/.local/bin/ollama" ]; then
    OLLAMA_INSTALLED=true
    export PATH="$HOME/.local/bin:$PATH"
    echo "‚úÖ Ollama –Ω–∞–π–¥–µ–Ω –≤ ~/.local/bin"
fi

# –ï—Å–ª–∏ Ollama —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å
if [ "$OLLAMA_INSTALLED" = true ]; then
    if ollama --version &> /dev/null; then
        OLLAMA_WORKING=true
        echo "‚úÖ Ollama —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        echo "‚ö†Ô∏è  Ollama —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        OLLAMA_WORKING=false
    fi
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Ollama –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [ "$OLLAMA_INSTALLED" = false ] || [ "$OLLAMA_WORKING" = false ]; then
    echo "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Ollama..."
    
    # –ü—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É
    if curl -fsSL https://ollama.ai/install.sh | sh 2>/dev/null; then
        echo "‚úÖ Ollama —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç"
    else
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        echo "‚ö†Ô∏è  –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ..."
        
        mkdir -p "$HOME/.local/bin"
        OLLAMA_VERSION="v0.12.3"
        OLLAMA_URL="https://github.com/ollama/ollama/releases/download/${OLLAMA_VERSION}/ollama-linux-amd64.tgz"
        
        if curl -L "$OLLAMA_URL" -o "/tmp/ollama.tgz"; then
            mkdir -p /tmp/ollama_extract
            
            if tar -xzf /tmp/ollama.tgz -C /tmp/ollama_extract; then
                # –ò—â–µ–º –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª
                if [ -f "/tmp/ollama_extract/bin/ollama" ]; then
                    cp "/tmp/ollama_extract/bin/ollama" "$HOME/.local/bin/ollama"
                elif [ -f "/tmp/ollama_extract/ollama" ]; then
                    cp "/tmp/ollama_extract/ollama" "$HOME/.local/bin/ollama"
                fi
                
                chmod +x "$HOME/.local/bin/ollama"
                export PATH="$HOME/.local/bin:$PATH"
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤ bashrc –µ—Å–ª–∏ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ
                if ! grep -q "export PATH.*\.local/bin" ~/.bashrc; then
                    echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/.bashrc
                fi
                
                echo "‚úÖ Ollama —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ ~/.local/bin"
                
                # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
                rm -rf /tmp/ollama_extract /tmp/ollama.tgz
            else
                echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å Ollama"
                exit 1
            fi
        else
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å Ollama"
            exit 1
        fi
    fi
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Ollama –∫–∞–∫ systemd —Å–µ—Ä–≤–∏—Å
echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ Ollama..."

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–º—É —Ñ–∞–π–ª—É Ollama
OLLAMA_EXEC=""
if command -v ollama &> /dev/null; then
    OLLAMA_EXEC=$(which ollama)
elif [ -f "$HOME/.local/bin/ollama" ]; then
    OLLAMA_EXEC="$HOME/.local/bin/ollama"
fi

if [ ! -z "$OLLAMA_EXEC" ]; then
    # –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è Ollama
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è Ollama..."
    sudo tee /etc/systemd/system/ollama.service > /dev/null << EOF
[Unit]
Description=Ollama Service
After=network-online.target
Wants=network-online.target

[Service]
Type=simple
User=deck
ExecStart=$OLLAMA_EXEC serve
Restart=always
RestartSec=5
Environment=OLLAMA_ORIGINS=*
WorkingDirectory=/home/deck

[Install]
WantedBy=multi-user.target
EOF

    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd –∏ –≤–∫–ª—é—á–∞–µ–º —Å–µ—Ä–≤–∏—Å
    sudo systemctl daemon-reload
    sudo systemctl enable ollama.service
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ —Å–µ—Ä–≤–∏—Å
    if ! systemctl is-active --quiet ollama.service; then
        echo "üîÑ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ Ollama..."
        sudo systemctl start ollama.service
        
        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
        echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
        for i in {1..30}; do
            if curl -s http://localhost:11434/api/tags >/dev/null 2>&1; then
                echo "‚úÖ –°–µ—Ä–≤–µ—Ä Ollama –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ —Å–µ—Ä–≤–∏—Å"
                break
            fi
            sleep 1
            if [ $i -eq 30 ]; then
                echo "‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä Ollama –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫..."
                # Fallback –∫ —Ä—É—á–Ω–æ–º—É –∑–∞–ø—É—Å–∫—É
                nohup "$OLLAMA_EXEC" serve > /dev/null 2>&1 &
                sleep 5
            fi
        done
    else
        echo "‚úÖ –°–µ—Ä–≤–∏—Å Ollama —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
    fi
else
    echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª Ollama"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π
echo "üß† –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π –ò–ò..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–µ–ª–∏
check_model() {
    local model_name="$1"
    if ollama list | grep -q "$model_name"; then
        echo "‚úÖ –ú–æ–¥–µ–ª—å $model_name —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
        return 0
    else
        echo "üì• –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ $model_name..."
        if ollama pull "$model_name"; then
            echo "‚úÖ –ú–æ–¥–µ–ª—å $model_name –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
            return 0
        else
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å $model_name"
            return 1
        fi
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥–µ–ª–∏
check_model "llama3.1:8b" || echo "‚ö†Ô∏è  –ú–æ–¥–µ–ª—å llama3.1:8b –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
check_model "llava:7b" || echo "‚ö†Ô∏è  –ú–æ–¥–µ–ª—å llava:7b –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞"

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if [ ! -f "config/config.yaml" ]; then
    cp config/config.example.yaml config/config.yaml
    echo "üìù –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ config/config.yaml"
    echo "‚ùó –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config/config.yaml —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏!"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è Disco Coop
echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ Disco Coop..."
sudo tee /etc/systemd/system/disco-coop.service > /dev/null << EOF
[Unit]
Description=Disco Coop Telegram Bot
After=network-online.target ollama.service
Wants=network-online.target
Requires=ollama.service

[Service]
Type=simple
User=deck
WorkingDirectory=$PROJECT_DIR
Environment=PATH=$PROJECT_DIR/venv/bin:/usr/local/bin:/usr/bin:/bin
ExecStart=$PROJECT_DIR/venv/bin/python main.py
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
sudo systemctl daemon-reload
sudo systemctl enable disco-coop.service

echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p logs

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞
echo "üìú –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞..."
cat > start.sh << 'EOF'
#!/bin/bash
cd "$(dirname "$0")"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Ollama —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω
echo "ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ Ollama..."
if ! systemctl is-active --quiet ollama.service; then
    echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ Ollama..."
    sudo systemctl start ollama.service
    sleep 5
fi

# –ñ–¥–µ–º, –ø–æ–∫–∞ Ollama —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ Ollama API..."
for i in {1..30}; do
    if curl -s http://localhost:11434/api/tags >/dev/null 2>&1; then
        echo "‚úÖ Ollama –≥–æ—Ç–æ–≤"
        break
    fi
    sleep 1
    if [ $i -eq 30 ]; then
        echo "‚ö†Ô∏è  Ollama –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
    fi
done

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
source venv/bin/activate
echo "üöÄ –ó–∞–ø—É—Å–∫ Disco Coop –±–æ—Ç–∞..."
python main.py
EOF
chmod +x start.sh

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
echo "üìú –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."

cat > stop.sh << 'EOF'
#!/bin/bash
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sudo systemctl stop disco-coop.service
sudo systemctl stop ollama.service
echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
EOF
chmod +x stop.sh

cat > restart.sh << 'EOF'
#!/bin/bash
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sudo systemctl restart ollama.service
sleep 5
sudo systemctl restart disco-coop.service
echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
EOF
chmod +x restart.sh

cat > status.sh << 'EOF'
#!/bin/bash
echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
echo "=================="
echo "ü§ñ Ollama:"
sudo systemctl status ollama.service --no-pager -l
echo ""
echo "üéÆ Disco Coop:"
sudo systemctl status disco-coop.service --no-pager -l
echo ""
echo "üåê API Ollama:"
if curl -s http://localhost:11434/api/tags >/dev/null 2>&1; then
    echo "‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ"
else
    echo "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
fi
EOF
chmod +x status.sh

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
echo ""
echo "üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫
source venv/bin/activate

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "1. üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
MISSING_DEPS=""

check_python_package() {
    if python -c "import $1" 2>/dev/null; then
        echo "   ‚úÖ $1"
    else
        echo "   ‚ùå $1 –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        MISSING_DEPS="$MISSING_DEPS $1"
    fi
}

check_python_package "telegram"
check_python_package "PIL"
check_python_package "aiohttp"
check_python_package "yaml"
check_python_package "loguru"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ)
python -c "import cv2" 2>/dev/null && echo "   ‚úÖ cv2 (opencv)" || echo "   ‚ö†Ô∏è  cv2 –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)"
python -c "import pyautogui" 2>/dev/null && echo "   ‚úÖ pyautogui" || echo "   ‚ö†Ô∏è  pyautogui –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)"
python -c "import pynput" 2>/dev/null && echo "   ‚úÖ pynput" || echo "   ‚ö†Ô∏è  pynput –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if [ ! -z "$MISSING_DEPS" ]; then
    echo "üì¶ –î–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    for dep in $MISSING_DEPS; do
        case $dep in
            "telegram")
                pip install python-telegram-bot>=22.0,<23.0 --no-cache-dir || \
                pip install python-telegram-bot --no-cache-dir || \
                echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å python-telegram-bot"
                ;;
            "PIL")
                pip install Pillow>=9.0.0 --no-cache-dir || \
                pip install Pillow --no-cache-dir || \
                echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Pillow"
                ;;
            "aiohttp")
                pip install aiohttp>=3.8.0 --no-cache-dir || \
                pip install aiohttp --no-cache-dir || \
                echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å aiohttp"
                ;;
            "yaml")
                pip install pyyaml>=6.0 --no-cache-dir || \
                pip install pyyaml --no-cache-dir || \
                echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å pyyaml"
                ;;
            "loguru")
                pip install loguru>=0.7.0 --no-cache-dir || \
                pip install loguru --no-cache-dir || \
                echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å loguru"
                ;;
        esac
    done
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "2. ‚öôÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if [ -f "config/config.yaml" ]; then
    if python -c "from src.utils.config import Config; c = Config.load(); c.validate(); print('   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞')" 2>/dev/null; then
        echo "   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞"
    else
        echo "   ‚ö†Ô∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
    fi
else
    echo "   ‚ö†Ô∏è  –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama –∏ –º–æ–¥–µ–ª–µ–π
echo "3. ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama –∏ –º–æ–¥–µ–ª–µ–π..."
if curl -s http://localhost:11434/api/tags > /dev/null 2>&1; then
    echo "   ‚úÖ –°–µ—Ä–≤–µ—Ä Ollama –¥–æ—Å—Ç—É–ø–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏
    if ollama list | grep -q "llama3.1:8b"; then
        echo "   ‚úÖ –ú–æ–¥–µ–ª—å llama3.1:8b –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
    else
        echo "   ‚ùå –ú–æ–¥–µ–ª—å llama3.1:8b –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
    
    if ollama list | grep -q "llava:7b"; then
        echo "   ‚úÖ –ú–æ–¥–µ–ª—å llava:7b –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
    else
        echo "   ‚ùå –ú–æ–¥–µ–ª—å llava:7b –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
else
    echo "   ‚ùå –°–µ—Ä–≤–µ—Ä Ollama –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
cat > test.sh << 'EOF'
#!/bin/bash
cd "$(dirname "$0")"
source venv/bin/activate

echo "üß™ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
python -c "
try:
    from src.utils.config import Config
    print('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è')
except Exception as e:
    print(f'‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π: {e}')

try:
    import telegram, PIL, aiohttp, yaml, loguru
    print('‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')
except ImportError as e:
    print(f'‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {e}')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
try:
    import pynput
    print('‚úÖ pynput –¥–æ—Å—Ç—É–ø–µ–Ω')
except ImportError as e:
    print(f'‚ö†Ô∏è  pynput –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}')
    
try:
    import pyautogui
    print('‚úÖ pyautogui –¥–æ—Å—Ç—É–ø–µ–Ω')
except ImportError as e:
    print(f'‚ö†Ô∏è  pyautogui –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç GameController
try:
    from src.game.controller import GameController
    print('‚úÖ GameController –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è')
except ImportError as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ GameController: {e}')
    print('üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: ./fix_pynput.sh')
"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama
if systemctl is-active --quiet ollama.service; then
    echo "‚úÖ –°–µ—Ä–≤–∏—Å Ollama –∞–∫—Ç–∏–≤–µ–Ω"
    if curl -s http://localhost:11434/api/tags > /dev/null; then
        echo "‚úÖ API Ollama –¥–æ—Å—Ç—É–ø–Ω–æ"
    else
        echo "‚ö†Ô∏è  API Ollama –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
    fi
else
    echo "‚ùå –°–µ—Ä–≤–∏—Å Ollama –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω - –∑–∞–ø—É—Å—Ç–∏—Ç–µ: sudo systemctl start ollama.service"
fi

echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
EOF
chmod +x test.sh

echo ""
echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""

# –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞
echo "ÔøΩ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã:"
echo "================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
if command -v python &> /dev/null; then
    echo "‚úÖ Python: $(python --version)"
else
    echo "‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if [ -d "venv" ]; then
    echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
else
    echo "‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Ollama
if command -v ollama &> /dev/null || [ -f "$HOME/.local/bin/ollama" ]; then
    echo "‚úÖ Ollama —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞
    if systemctl is-active --quiet ollama.service; then
        echo "‚úÖ –°–µ—Ä–≤–∏—Å Ollama –∞–∫—Ç–∏–≤–µ–Ω"
    elif pgrep -f "ollama serve" > /dev/null; then
        echo "‚úÖ –°–µ—Ä–≤–µ—Ä Ollama –∑–∞–ø—É—â–µ–Ω (—Ä—É—á–Ω–æ–π —Ä–µ–∂–∏–º)"
    else
        echo "‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    if curl -s http://localhost:11434/api/tags > /dev/null 2>&1; then
        echo "‚úÖ API Ollama –¥–æ—Å—Ç—É–ø–Ω–æ"
    else
        echo "‚ö†Ô∏è  API Ollama –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
    fi
else
    echo "‚ùå Ollama –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
if [ -f "config/config.yaml" ]; then
    echo "‚úÖ –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω"
else
    echo "‚ùå –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
fi

echo ""
echo "ÔøΩ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "================================"
echo "1. üìù –ù–∞—Å—Ç—Ä–æ–π—Ç–µ config/config.yaml:"
echo "   - –î–æ–±–∞–≤—å—Ç–µ Telegram bot token"
echo "   - –£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ chat IDs"
echo ""
echo "2. üß™ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É: ./test.sh"
echo ""
echo "3. ÔøΩ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:"
echo "   - –í—Ä—É—á–Ω—É—é: ./start.sh"
echo "   - –ö–∞–∫ —Å–µ—Ä–≤–∏—Å: sudo systemctl start disco-coop.service"
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "- –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞: sudo systemctl status disco-coop.service"
echo "- –°—Ç–∞—Ç—É—Å Ollama: sudo systemctl status ollama.service"
echo "- –õ–æ–≥–∏ –±–æ—Ç–∞: sudo journalctl -u disco-coop.service -f"
echo "- –õ–æ–≥–∏ Ollama: sudo journalctl -u ollama.service -f"
echo "- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞: sudo systemctl restart disco-coop.service"
echo "- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Ollama: sudo systemctl restart ollama.service"
echo ""
echo "‚ùó –í–∞–∂–Ω–æ:"
echo "- –°–æ–∑–¥–∞–π—Ç–µ Telegram –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather"
echo "- –ó–∞–ø—É—Å—Ç–∏—Ç–µ Disco Elysium –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º"
echo "- –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ"