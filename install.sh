#!/bin/bash

# Disco Coop - –£—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è Steam Deck
# –ü–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è pacman

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PYTHON_DIR="$HOME/python"
OLLAMA_DIR="$HOME/.local/share/ollama"
LOCAL_BIN="$HOME/.local/bin"

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚ÑπÔ∏è  $1"
}

log_success() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚úÖ $1" 
}

log_warning() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚ö†Ô∏è  $1" >&2
}

log_error() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚ùå $1" >&2
}

# –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å GitHub
download_project() {
    log_info "üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ DiscoCoop..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–æ–µ–∫—Ç
    if [ -f "main.py" ] && [ -f "config/config.example.yaml" ]; then
        log_info "–ü—Ä–æ–µ–∫—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ"
        return 0
    fi
    
    # –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (—Å–æ–∑–¥–∞—Å—Ç—Å—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è DiscoCoop)
    local repo_url="https://github.com/ArtemKiyashko/DiscoCoop.git"
    
    log_info "–ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
    if ! git clone "$repo_url"; then
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å GitHub"
        exit 1
    fi
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
    cd DiscoCoop
    
    log_success "–ü—Ä–æ–µ–∫—Ç —Å–∫–∞—á–∞–Ω, –ø–µ—Ä–µ—à–ª–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é DiscoCoop"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ Python
is_python_installed() {
    [ -x "$PYTHON_DIR/bin/python3" ] && return 0 || return 1
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ–≥–æ Python
install_python() {
    if is_python_installed; then
        log_success "Python —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $($PYTHON_DIR/bin/python3 --version)"
        return 0
    fi
    
    log_info "üì• –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ–≥–æ Python..."
    cd /tmp
    
    if curl -L "https://github.com/indygreg/python-build-standalone/releases/download/20231002/cpython-3.11.6+20231002-x86_64-unknown-linux-gnu-install_only.tar.gz" -o python.tar.gz; then
        log_info "üìÇ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ Python..."
        tar -xzf python.tar.gz -C "$HOME"
        
        # –°–æ–∑–¥–∞–µ–º —Å–∏–º–ª–∏–Ω–∫–∏
        ln -sf "$PYTHON_DIR/bin/python3" "$PYTHON_DIR/bin/python" 2>/dev/null || true
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH
        mkdir -p "$LOCAL_BIN"
        export PATH="$PYTHON_DIR/bin:$LOCAL_BIN:$PATH"
        
        # –û–±–Ω–æ–≤–ª—è–µ–º shell –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏  
        for config in ~/.bashrc ~/.profile ~/.zshrc; do
            if [ -f "$config" ] && ! grep -q "disco-coop Python" "$config"; then
                echo "" >> "$config"
                echo "# Added by disco-coop installer" >> "$config" 
                echo "export PATH=\"$PYTHON_DIR/bin:$LOCAL_BIN:\$PATH\"" >> "$config"
            fi
        done
        
        log_success "Python —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $($PYTHON_DIR/bin/python3 --version)"
        rm -f python.tar.gz
    else
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å Python"
        exit 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏  
create_image_tools() {
    log_info "üñºÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (Steam Deck)..."
    
    mkdir -p "$LOCAL_BIN"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è Steam Deck
    local missing_tools=()
    
    if ! command -v spectacle &> /dev/null; then
        missing_tools+=("spectacle")
    else
        log_success "‚úÖ Spectacle –Ω–∞–π–¥–µ–Ω"
    fi
    
    if ! command -v xdotool &> /dev/null; then
        missing_tools+=("xdotool")
    else
        log_success "‚úÖ xdotool –Ω–∞–π–¥–µ–Ω"
    fi
    
    if [ ${#missing_tools[@]} -gt 0 ]; then
        log_warning "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: ${missing_tools[*]}"
        log_info "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo pacman -S ${missing_tools[*]}"
    fi
    
    # –ö–æ–ø–∏—Ä—É–µ–º –≥–æ—Ç–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏–∑ –ø–∞–ø–∫–∏ tools/
    echo "üîß –ö–æ–ø–∏—Ä—É–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏..."
    
    if [ -f "tools/screenshot-tool" ]; then
        cp "tools/screenshot-tool" "$LOCAL_BIN/"
        chmod +x "$LOCAL_BIN/screenshot-tool"
        echo "‚úÖ screenshot-tool —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        log_error "‚ùå –§–∞–π–ª tools/screenshot-tool –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    if [ -f "tools/image-convert" ]; then
        cp "tools/image-convert" "$LOCAL_BIN/"
        chmod +x "$LOCAL_BIN/image-convert"
        echo "‚úÖ image-convert —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        log_error "‚ùå –§–∞–π–ª tools/image-convert –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    log_success "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Ollama
install_ollama() {
    log_info "ü§ñ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Ollama..."
    
    if [ -f "$OLLAMA_DIR/bin/ollama" ]; then
        log_info "Ollama —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 0
    fi
    
    mkdir -p "$OLLAMA_DIR/bin"
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
    local arch
    case "$(uname -m)" in
        x86_64) arch="amd64" ;;
        aarch64|arm64) arch="arm64" ;;
        *) 
            log_error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $(uname -m)"
            exit 1
            ;;
    esac
    
    log_info "–ó–∞–≥—Ä—É–∂–∞–µ–º Ollama –¥–ª—è $arch..."
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∏–Ω–∞—Ä–Ω–∏–∫ Ollama
    if curl -L "https://github.com/ollama/ollama/releases/latest/download/ollama-linux-$arch" -o "$OLLAMA_DIR/bin/ollama"; then
        chmod +x "$OLLAMA_DIR/bin/ollama"
        log_success "Ollama —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $($OLLAMA_DIR/bin/ollama --version 2>/dev/null | head -1 || echo '–≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É')"
    else
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å Ollama"
        exit 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏–∑ —à–∞–±–ª–æ–Ω–∞
    mkdir -p "$HOME/.ollama"
    if [ -f "templates/ollama-config.json" ]; then
        sed "s|HOME_PLACEHOLDER|$HOME|g" templates/ollama-config.json > "$HOME/.ollama/config.json"
    else
        log_error "–®–∞–±–ª–æ–Ω ollama-config.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    log_success "Ollama –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
install_project() {
    log_info "üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    if [ ! -f "main.py" ]; then
        log_error "–§–∞–π–ª main.py –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."
        exit 1
    fi
    
    export PATH="$PYTHON_DIR/bin:$PATH"
    
    # –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    local venv_dir="venv"
    if [ ! -d "$venv_dir" ]; then
        log_info "–°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
        $PYTHON_DIR/bin/python3 -m venv "$venv_dir"
    fi
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    log_info "–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
    source "$venv_dir/bin/activate"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º pip –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
    log_info "–û–±–Ω–æ–≤–ª—è–µ–º pip..."
    python -m pip install --upgrade pip
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python
    if [ -f "requirements.txt" ]; then
        log_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ requirements.txt..."
        # –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –±–µ–∑ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö
        pip install \
            "python-telegram-bot>=22.0" \
            "aiohttp>=3.8.0" \
            "pyyaml>=6.0" \
            "loguru>=0.7.0" \
            "Pillow>=9.0.0" \
            "requests>=2.28.0" \
            "opencv-python-headless>=4.5.0" \
            "numpy>=1.20.0" \
            "six>=1.16.0"
            
        # –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –æ—Ç–¥–µ–ª—å–Ω–æ
        log_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä–æ–≤—ã–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã..."
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è PyAutoGUI
        pip install "pillow" "python3-xlib" || true
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PyAutoGUI –±–µ–∑ evdev (—Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏)
        if pip install --no-deps "PyAutoGUI>=0.9.50"; then
            log_success "PyAutoGUI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–±–µ–∑ evdev)"
        else
            log_warning "PyAutoGUI –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å - –∏–≥—Ä–æ–≤–æ–π –≤–≤–æ–¥ –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
        
        if pip install "pynput>=1.7.0"; then
            log_success "pynput —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        else
            log_warning "pynput –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å - –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
        fi
    else
        log_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
        pip install \
            "python-telegram-bot>=22.0" \
            "aiohttp" \
            "pillow" \
            "requests" \
            "loguru" \
            "pyyaml"
            
        # –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –æ—Ç–¥–µ–ª—å–Ω–æ
        log_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä–æ–≤—ã–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã..."
        pip install "python3-xlib" || true
        pip install --no-deps "PyAutoGUI" || log_warning "PyAutoGUI –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
        pip install "pynput" || log_warning "pynput –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
    fi
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if [ ! -f "config/config.yaml" ]; then
        log_info "–°–æ–∑–¥–∞–µ–º config/config.yaml..."
        if [ -f "config/config.example.yaml" ]; then
            cp config/config.example.yaml config/config.yaml
            log_warning "‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π—Ç–µ config/config.yaml —Å –≤–∞—à–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏!"
        else
            log_error "config/config.example.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            exit 1
        fi
    fi
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    mkdir -p screenshots logs
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –∏–∑ —à–∞–±–ª–æ–Ω–∞
    if [ -f "templates/test_setup.py" ]; then
        cp templates/test_setup.py .
        chmod +x test_setup.py
    else
        log_warning "–®–∞–±–ª–æ–Ω test_setup.py –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ç–µ—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    log_success "–ü—Ä–æ–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–æ–≤
setup_services() {
    log_info "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    local current_dir="$(pwd)"
    local user_service_dir="$HOME/.config/systemd/user"
    
    mkdir -p "$user_service_dir"
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å Ollama –∏–∑ —à–∞–±–ª–æ–Ω–∞
    if [ -f "templates/ollama.service" ]; then
        sed -e "s|OLLAMA_DIR_PLACEHOLDER|$OLLAMA_DIR|g" \
            -e "s|HOME_PLACEHOLDER|$HOME|g" \
            templates/ollama.service > "$user_service_dir/ollama.service"
    else
        log_error "–®–∞–±–ª–æ–Ω ollama.service –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi

    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –±–æ—Ç–∞ –∏–∑ —à–∞–±–ª–æ–Ω–∞
    if [ -f "templates/disco-coop-bot.service" ]; then
        sed -e "s|PYTHON_DIR_PLACEHOLDER|$PYTHON_DIR|g" \
            -e "s|CURRENT_DIR_PLACEHOLDER|$current_dir|g" \
            -e "s|LOCAL_BIN_PLACEHOLDER|$LOCAL_BIN|g" \
            -e "s|HOME_PLACEHOLDER|$HOME|g" \
            templates/disco-coop-bot.service > "$user_service_dir/disco-coop-bot.service"
    else
        log_error "–®–∞–±–ª–æ–Ω disco-coop-bot.service –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi

    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd
    systemctl --user daemon-reload
    
    log_success "–°–µ—Ä–≤–∏—Å—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    log_info "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
    log_info "  systemctl --user enable --now ollama"
    log_info "  systemctl --user enable --now disco-coop-bot"
}

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
final_check() {
    log_info "üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
    
    local all_ok=true
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    if [ -f "$PYTHON_DIR/bin/python3" ]; then
        log_success "Python: –≥–æ—Ç–æ–≤"
    else
        log_error "Python: –Ω–µ –Ω–∞–π–¥–µ–Ω"
        all_ok=false
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if [ -f "venv/bin/python" ]; then
        log_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: –≥–æ—Ç–æ–≤–æ"
    else
        log_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        all_ok=false
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Ollama
    if [ -f "$OLLAMA_DIR/bin/ollama" ]; then
        log_success "Ollama: –≥–æ—Ç–æ–≤"
    else
        log_error "Ollama: –Ω–µ –Ω–∞–π–¥–µ–Ω"
        all_ok=false
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    for tool in screenshot-tool image-convert; do
        if [ -f "$LOCAL_BIN/$tool" ]; then
            log_success "$tool: –≥–æ—Ç–æ–≤"
        else
            log_error "$tool: –Ω–µ –Ω–∞–π–¥–µ–Ω"
            all_ok=false
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞
    for file in main.py config/config.yaml; do
        if [ -f "$file" ]; then
            log_success "$file: –Ω–∞–π–¥–µ–Ω"
        else
            log_warning "$file: —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
        fi
    done
    
    if $all_ok; then
        log_success "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
        echo
        echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
        echo "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ config/config.yaml —Å —Ç–æ–∫–µ–Ω–æ–º –±–æ—Ç–∞"
        echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç: ./test_setup.py"
        echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã:"
        echo "   systemctl --user enable --now ollama"
        echo "   systemctl --user enable --now disco-coop-bot"
        echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: systemctl --user status ollama disco-coop-bot"
        echo
    else
        log_error "‚ö†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    echo "üéÆ Disco Coop - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è Steam Deck"
    echo "=========================================="
    echo
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
    if [ "$EUID" -eq 0 ]; then
        log_error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ –æ—Ç root! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    if ! command -v curl &> /dev/null; then
        log_error "curl –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ curl –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
        exit 1
    fi
    
    if ! command -v git &> /dev/null; then
        log_error "git –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ git –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è PyAutoGUI –Ω–∞ Steam Deck
    if [ -f "/etc/steamos-release" ] || [ -f "/etc/holo-release" ]; then
        log_info "–û–±–Ω–∞—Ä—É–∂–µ–Ω Steam Deck. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
        if ! pkg-config --exists x11 xext xtst; then
            log_warning "‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è PyAutoGUI"
            log_info "üí° –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ:"
            log_info "   sudo steamos-readonly disable"
            log_info "   sudo pacman -S libx11 libxext libxtst python-dev"
            log_info "   sudo steamos-readonly enable"
        fi
    fi
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    mkdir -p "$PYTHON_DIR" "$OLLAMA_DIR" "$LOCAL_BIN"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH
    export PATH="$PYTHON_DIR/bin:$OLLAMA_DIR/bin:$LOCAL_BIN:$PATH"
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    download_project
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –ø–æ —ç—Ç–∞–ø–∞–º
    log_info "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É..."
    
    install_python
    create_image_tools  
    install_ollama
    install_project
    setup_services
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    final_check
    
    echo
    log_success "‚ú® –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ config/config.yaml –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã."
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-}" in
    --help|-h)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
        echo
        echo "–û–ø—Ü–∏–∏:"
        echo "  --help, -h     –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        echo "  --test         –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è"
        echo "  --clean        –û—á–∏—Å—Ç–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É"
        echo "  --reinstall    –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã"
        echo
        exit 0
        ;;
    --test)
        if [ -f "test_setup.py" ]; then
            exec "$PYTHON_DIR/bin/python3" test_setup.py
        else
            log_error "test_setup.py –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É."
            exit 1
        fi
        ;;
    --clean)
        log_info "üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
        rm -rf "$PYTHON_DIR" "$OLLAMA_DIR" "$LOCAL_BIN"
        rm -f test_setup.py
        rm -rf templates  # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
        systemctl --user stop ollama disco-coop-bot 2>/dev/null || true
        systemctl --user disable ollama disco-coop-bot 2>/dev/null || true
        rm -f "$HOME/.config/systemd/user/ollama.service"
        rm -f "$HOME/.config/systemd/user/disco-coop-bot.service"
        systemctl --user daemon-reload
        log_success "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        exit 0
        ;;
    --reinstall)
        log_info "ÔøΩ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞..."
        main
        exit $?
        ;;
    "")
        main
        exit $?
        ;;
    *)
        log_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
        log_info "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
        exit 1
        ;;
esac
